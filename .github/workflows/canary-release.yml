# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Canary Release

on:
  push:
    branches:
      - main
      - master
  workflow_dispatch:

# Prevent concurrent canary releases
concurrency:
  group: canary-release-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: '20'
  PNPM_VERSION: '10.18.3'

jobs:
  canary:
    name: üê§ Canary Release
    runs-on: ubuntu-latest
    # Only run on main/master branch pushes (not PRs)
    if: github.event_name == 'workflow_dispatch' || (github.event_name == 'push' && github.ref == 'refs/heads/main') || (github.event_name == 'push' && github.ref == 'refs/heads/master')
    permissions:
      contents: write
      id-token: write # Required for NPM provenance
      
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: üîß Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: 'https://registry.npmjs.org'
          
      - name: üì¶ Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
          
      - name: üì• Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: üèóÔ∏è Build all packages
        run: pnpm nx run-many -t build --all
        
      - name: üê§ Version and Publish Canary
        run: |
          # Get current commit SHA (short)
          COMMIT_SHA=$(git rev-parse --short HEAD)
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          
          echo "üê§ Publishing canary version: canary-${COMMIT_SHA}-${TIMESTAMP}"
          
          # Navigate to dist packages and publish each
          for package_dir in dist/packages/*; do
            if [ -d "$package_dir" ] && [ -f "$package_dir/package.json" ]; then
              cd "$package_dir"
              
              # Get current version
              CURRENT_VERSION=$(node -p "require('./package.json').version")
              PACKAGE_NAME=$(node -p "require('./package.json').name")
              
              # Create canary version
              CANARY_VERSION="${CURRENT_VERSION}-canary.${TIMESTAMP}.${COMMIT_SHA}"
              
              echo "üì¶ Publishing ${PACKAGE_NAME}@${CANARY_VERSION}"
              
              # Update version
              npm version "$CANARY_VERSION" --no-git-tag-version
              
              # Publish with canary tag
              npm publish --tag canary --access public --provenance
              
              echo "‚úÖ Published ${PACKAGE_NAME}@${CANARY_VERSION} with tag 'canary'"
              
              cd -
            fi
          done
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          
      - name: üí¨ Comment on commit
        uses: actions/github-script@v7
        with:
          script: |
            const sha = context.sha;
            const message = `üê§ **Canary Release Published**\n\nInstall with:\n\`\`\`bash\nnpm install @forge-js/eslint-plugin-llm-optimized@canary\n\`\`\`\n\nOr specific version:\n\`\`\`bash\nnpm install @forge-js/eslint-plugin-llm-optimized@canary-${sha.substring(0, 7)}-*\n\`\`\``;
            
            await github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: sha,
              body: message
            });

