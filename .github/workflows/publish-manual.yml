name: Manual Publish

on:
  workflow_dispatch:
    inputs:
      dist-tag:
        description: "NPM distribution tag"
        required: true
        type: choice
        options:
          - latest
          - next
          - beta
          - rc
          - alpha
          - canary
        default: "latest"
      version-specifier:
        description: "Version specifier (leave empty to auto-calculate from conventional commits)"
        required: false
        type: choice
        options:
          - auto
          - major
          - minor
          - patch
          - premajor
          - preminor
          - prepatch
          - prerelease
        default: "auto"
      dry-run:
        description: "Dry run (preview changes without publishing)"
        required: false
        type: boolean
        default: false

jobs:
  publish:
    name: 📦 Publish to NPM
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
      pull-requests: write
    timeout-minutes: 15

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: ⚙️ Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.18.3

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/
          cache: "pnpm"

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🔍 Print Environment Info
        run: pnpm nx report

      - name: 🏗️ Build packages
        run: pnpm nx run-many -t build --all

      - name: 🔖 Version packages
        id: version
        run: |
          if [ "${{ inputs.dry-run }}" = "true" ]; then
            echo "🔍 Dry run mode - previewing changes only"
            DRY_RUN_FLAG="--dry-run"
          else
            DRY_RUN_FLAG=""
          fi

          if [ "${{ inputs.version-specifier }}" != "auto" ]; then
            echo "📝 Using specified version bump: ${{ inputs.version-specifier }}"
            pnpm nx release version ${{ inputs.version-specifier }} --skip-publish $DRY_RUN_FLAG
          else
            echo "📝 Using conventional commits to determine version"
            pnpm nx release version --skip-publish $DRY_RUN_FLAG
          fi

      - name: 🚀 Publish packages
        if: inputs.dry-run == false
        run: |
          # Update nx.json with the selected dist tag
          if [ "${{ inputs.dist-tag }}" != "latest" ]; then
            echo "📝 Publishing with dist tag: ${{ inputs.dist-tag }}"
            # Use jq to update the tag in nx.json temporarily
            jq '.release.publishTargets.npm.tag = "${{ inputs.dist-tag }}"' nx.json > nx.json.tmp
            mv nx.json.tmp nx.json
          fi

          pnpm nx release publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_CONFIG_PROVENANCE: true

      - name: 📝 Create Release Summary
        if: inputs.dry-run == false
        run: |
          echo "## 🎉 Published Packages" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Dist Tag:** \`${{ inputs.dist-tag }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Version Strategy:** ${{ inputs.version-specifier || 'conventional commits' }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Packages" >> $GITHUB_STEP_SUMMARY
          echo "- \`@forge-js/eslint-plugin\`" >> $GITHUB_STEP_SUMMARY
          echo "- \`@forge-js/eslint-plugin-utils\`" >> $GITHUB_STEP_SUMMARY
          echo "- \`@forge-js/cli\`" >> $GITHUB_STEP_SUMMARY

      - name: 💬 Comment on related PRs
        if: inputs.dry-run == false && success()
        uses: actions/github-script@v7
        with:
          script: |
            const tag = '${{ inputs.dist-tag }}';
            const message = `✅ Packages published successfully with tag \`${tag}\`!\n\nYou can install them with:\n\`\`\`bash\npnpm add @forge-js/eslint-plugin@${tag}\n\`\`\``;

            // You could enhance this to find related PRs and comment on them
            console.log(message);
